/* tslint:disable */
/* eslint-disable */
/**
 * Firefly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Venue } from './Venue';
import {
    VenueFromJSON,
    VenueFromJSONTyped,
    VenueToJSON,
    VenueToJSONTyped,
} from './Venue';
import type { Service } from './Service';
import {
    ServiceFromJSON,
    ServiceFromJSONTyped,
    ServiceToJSON,
    ServiceToJSONTyped,
} from './Service';

/**
 * 
 * @export
 * @interface VenueGetResponse
 */
export interface VenueGetResponse {
    /**
     * 
     * @type {Venue}
     * @memberof VenueGetResponse
     */
    venue: Venue;
    /**
     * 
     * @type {Array<Service>}
     * @memberof VenueGetResponse
     */
    services: Array<Service>;
}

/**
 * Check if a given object implements the VenueGetResponse interface.
 */
export function instanceOfVenueGetResponse(value: object): value is VenueGetResponse {
    if (!('venue' in value) || value['venue'] === undefined) return false;
    if (!('services' in value) || value['services'] === undefined) return false;
    return true;
}

export function VenueGetResponseFromJSON(json: any): VenueGetResponse {
    return VenueGetResponseFromJSONTyped(json, false);
}

export function VenueGetResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): VenueGetResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'venue': VenueFromJSON(json['venue']),
        'services': ((json['services'] as Array<any>).map(ServiceFromJSON)),
    };
}

export function VenueGetResponseToJSON(json: any): VenueGetResponse {
    return VenueGetResponseToJSONTyped(json, false);
}

export function VenueGetResponseToJSONTyped(value?: VenueGetResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'venue': VenueToJSON(value['venue']),
        'services': ((value['services'] as Array<any>).map(ServiceToJSON)),
    };
}

