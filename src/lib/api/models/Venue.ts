/* tslint:disable */
/* eslint-disable */
/**
 * Firefly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ContactDetails } from './ContactDetails';
import {
    ContactDetailsFromJSON,
    ContactDetailsFromJSONTyped,
    ContactDetailsToJSON,
    ContactDetailsToJSONTyped,
} from './ContactDetails';

/**
 * Public venue shape returned by API (sensitive/internal fields omitted)
 * @export
 * @interface Venue
 */
export interface Venue {
    /**
     * 
     * @type {string}
     * @memberof Venue
     */
    id?: string | null;
    /**
     * 
     * @type {ContactDetails}
     * @memberof Venue
     */
    contactDetails: ContactDetails;
    /**
     * 
     * @type {string}
     * @memberof Venue
     */
    description: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Venue
     */
    images: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Venue
     */
    scanName: string;
    /**
     * 
     * @type {string}
     * @memberof Venue
     */
    thumbnail?: string | null;
}

/**
 * Check if a given object implements the Venue interface.
 */
export function instanceOfVenue(value: object): value is Venue {
    if (!('contactDetails' in value) || value['contactDetails'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('images' in value) || value['images'] === undefined) return false;
    if (!('scanName' in value) || value['scanName'] === undefined) return false;
    return true;
}

export function VenueFromJSON(json: any): Venue {
    return VenueFromJSONTyped(json, false);
}

export function VenueFromJSONTyped(json: any, ignoreDiscriminator: boolean): Venue {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'contactDetails': ContactDetailsFromJSON(json['contactDetails']),
        'description': json['description'],
        'images': json['images'],
        'scanName': json['scan_name'],
        'thumbnail': json['thumbnail'] == null ? undefined : json['thumbnail'],
    };
}

export function VenueToJSON(json: any): Venue {
    return VenueToJSONTyped(json, false);
}

export function VenueToJSONTyped(value?: Venue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'contactDetails': ContactDetailsToJSON(value['contactDetails']),
        'description': value['description'],
        'images': value['images'],
        'scan_name': value['scanName'],
        'thumbnail': value['thumbnail'],
    };
}

