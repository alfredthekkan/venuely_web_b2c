/* tslint:disable */
/* eslint-disable */
/**
 * Venuely Booking Widget Api
 * Api collection for making a booking
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Service } from './Service';
import {
    ServiceFromJSON,
    ServiceFromJSONTyped,
    ServiceToJSON,
    ServiceToJSONTyped,
} from './Service';

/**
 * 
 * @export
 * @interface Venue
 */
export interface Venue {
    /**
     * The id of the venue
     * @type {string}
     * @memberof Venue
     */
    venueId: string;
    /**
     * The name of the Venue
     * @type {string}
     * @memberof Venue
     */
    title: string;
    /**
     * A short description about the type of venue, services offerred
     * @type {string}
     * @memberof Venue
     */
    description?: string;
    /**
     * The url of the thumbnail image of the venue
     * @type {string}
     * @memberof Venue
     */
    thumbNailUrl?: string;
    /**
     * Phone number
     * @type {string}
     * @memberof Venue
     */
    phoneNumber?: string;
    /**
     * 
     * @type {Array<Service>}
     * @memberof Venue
     */
    services?: Array<Service>;
}

/**
 * Check if a given object implements the Venue interface.
 */
export function instanceOfVenue(value: object): value is Venue {
    if (!('venueId' in value) || value['venueId'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    return true;
}

export function VenueFromJSON(json: any): Venue {
    return VenueFromJSONTyped(json, false);
}

export function VenueFromJSONTyped(json: any, ignoreDiscriminator: boolean): Venue {
    if (json == null) {
        return json;
    }
    return {
        
        'venueId': json['venue_id'],
        'title': json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'thumbNailUrl': json['thumb_nail_url'] == null ? undefined : json['thumb_nail_url'],
        'phoneNumber': json['phone_number'] == null ? undefined : json['phone_number'],
        'services': json['services'] == null ? undefined : ((json['services'] as Array<any>).map(ServiceFromJSON)),
    };
}

export function VenueToJSON(json: any): Venue {
    return VenueToJSONTyped(json, false);
}

export function VenueToJSONTyped(value?: Venue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'venue_id': value['venueId'],
        'title': value['title'],
        'description': value['description'],
        'thumb_nail_url': value['thumbNailUrl'],
        'phone_number': value['phoneNumber'],
        'services': value['services'] == null ? undefined : ((value['services'] as Array<any>).map(ServiceToJSON)),
    };
}

