/* tslint:disable */
/* eslint-disable */
/**
 * Venuely Booking Widget Api
 * Api collection for making a booking
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TimeSlot } from './TimeSlot';
import {
    TimeSlotFromJSON,
    TimeSlotFromJSONTyped,
    TimeSlotToJSON,
    TimeSlotToJSONTyped,
} from './TimeSlot';

/**
 * 
 * @export
 * @interface TimeSlotProvider
 */
export interface TimeSlotProvider {
    /**
     * The id of the service provider
     * @type {string}
     * @memberof TimeSlotProvider
     */
    providerId: string;
    /**
     * The name to be displayed in b2c apps for provider
     * @type {string}
     * @memberof TimeSlotProvider
     */
    providerName: string;
    /**
     * 
     * @type {Array<TimeSlot>}
     * @memberof TimeSlotProvider
     */
    slots: Array<TimeSlot>;
}

/**
 * Check if a given object implements the TimeSlotProvider interface.
 */
export function instanceOfTimeSlotProvider(value: object): value is TimeSlotProvider {
    if (!('providerId' in value) || value['providerId'] === undefined) return false;
    if (!('providerName' in value) || value['providerName'] === undefined) return false;
    if (!('slots' in value) || value['slots'] === undefined) return false;
    return true;
}

export function TimeSlotProviderFromJSON(json: any): TimeSlotProvider {
    return TimeSlotProviderFromJSONTyped(json, false);
}

export function TimeSlotProviderFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimeSlotProvider {
    if (json == null) {
        return json;
    }
    return {
        
        'providerId': json['provider_id'],
        'providerName': json['provider_name'],
        'slots': ((json['slots'] as Array<any>).map(TimeSlotFromJSON)),
    };
}

export function TimeSlotProviderToJSON(json: any): TimeSlotProvider {
    return TimeSlotProviderToJSONTyped(json, false);
}

export function TimeSlotProviderToJSONTyped(value?: TimeSlotProvider | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'provider_id': value['providerId'],
        'provider_name': value['providerName'],
        'slots': ((value['slots'] as Array<any>).map(TimeSlotToJSON)),
    };
}

