/* tslint:disable */
/* eslint-disable */
/**
 * Firefly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Phone } from './Phone';
import {
    PhoneFromJSON,
    PhoneFromJSONTyped,
    PhoneToJSON,
    PhoneToJSONTyped,
} from './Phone';

/**
 * 
 * @export
 * @interface ContactDetails
 */
export interface ContactDetails {
    /**
     * 
     * @type {string}
     * @memberof ContactDetails
     */
    address: string;
    /**
     * 
     * @type {string}
     * @memberof ContactDetails
     */
    name: string;
    /**
     * 
     * @type {Phone}
     * @memberof ContactDetails
     */
    phone: Phone;
    /**
     * 
     * @type {string}
     * @memberof ContactDetails
     */
    timezoneId: string;
}

/**
 * Check if a given object implements the ContactDetails interface.
 */
export function instanceOfContactDetails(value: object): value is ContactDetails {
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('phone' in value) || value['phone'] === undefined) return false;
    if (!('timezoneId' in value) || value['timezoneId'] === undefined) return false;
    return true;
}

export function ContactDetailsFromJSON(json: any): ContactDetails {
    return ContactDetailsFromJSONTyped(json, false);
}

export function ContactDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContactDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'address': json['address'],
        'name': json['name'],
        'phone': PhoneFromJSON(json['phone']),
        'timezoneId': json['timezoneId'],
    };
}

export function ContactDetailsToJSON(json: any): ContactDetails {
    return ContactDetailsToJSONTyped(json, false);
}

export function ContactDetailsToJSONTyped(value?: ContactDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'address': value['address'],
        'name': value['name'],
        'phone': PhoneToJSON(value['phone']),
        'timezoneId': value['timezoneId'],
    };
}

